{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\n\n/**\n * Based on the work of https://github.com/jchook/uuid-random\n */\nlet buf,\n    bufIdx = 0;\nconst hexBytes = new Array(256); // Pre-calculate toString(16) for speed\n\nfor (let i = 0; i < 256; i++) {\n  hexBytes[i] = (i + 0x100).toString(16).substring(1);\n} // Use best available PRNG\n\n\nconst randomBytes = (() => {\n  // Node & Browser support\n  const lib = typeof crypto !== 'undefined' ? crypto : typeof window !== 'undefined' ? window.crypto || window.msCrypto : void 0;\n\n  if (lib !== void 0) {\n    if (lib.randomBytes !== void 0) {\n      return lib.randomBytes;\n    }\n\n    if (lib.getRandomValues !== void 0) {\n      return n => {\n        const bytes = new Uint8Array(n);\n        lib.getRandomValues(bytes);\n        return bytes;\n      };\n    }\n  }\n\n  return n => {\n    const r = [];\n\n    for (let i = n; i > 0; i--) {\n      r.push(Math.floor(Math.random() * 256));\n    }\n\n    return r;\n  };\n})(); // Buffer random numbers for speed\n// Reduce memory usage by decreasing this number (min 16)\n// or improve speed by increasing this number (try 16384)\n\n\nconst BUFFER_SIZE = 4096;\nexport default function () {\n  // Buffer some random bytes for speed\n  if (buf === void 0 || bufIdx + 16 > BUFFER_SIZE) {\n    bufIdx = 0;\n    buf = randomBytes(BUFFER_SIZE);\n  }\n\n  const b = Array.prototype.slice.call(buf, bufIdx, bufIdx += 16);\n  b[6] = b[6] & 0x0f | 0x40;\n  b[8] = b[8] & 0x3f | 0x80;\n  return hexBytes[b[0]] + hexBytes[b[1]] + hexBytes[b[2]] + hexBytes[b[3]] + '-' + hexBytes[b[4]] + hexBytes[b[5]] + '-' + hexBytes[b[6]] + hexBytes[b[7]] + '-' + hexBytes[b[8]] + hexBytes[b[9]] + '-' + hexBytes[b[10]] + hexBytes[b[11]] + hexBytes[b[12]] + hexBytes[b[13]] + hexBytes[b[14]] + hexBytes[b[15]];\n}","map":{"version":3,"names":["buf","bufIdx","hexBytes","Array","i","toString","substring","randomBytes","lib","crypto","window","msCrypto","getRandomValues","n","bytes","Uint8Array","r","push","Math","floor","random","BUFFER_SIZE","b","prototype","slice","call"],"sources":["C:/Users/park2020/Desktop/WEB_YBR/frontend_ybr/node_modules/quasar/src/utils/uid.js"],"sourcesContent":["/**\n * Based on the work of https://github.com/jchook/uuid-random\n */\n\nlet\n  buf,\n  bufIdx = 0\nconst hexBytes = new Array(256)\n\n// Pre-calculate toString(16) for speed\nfor (let i = 0; i < 256; i++) {\n  hexBytes[ i ] = (i + 0x100).toString(16).substring(1)\n}\n\n// Use best available PRNG\nconst randomBytes = (() => {\n  // Node & Browser support\n  const lib = typeof crypto !== 'undefined'\n    ? crypto\n    : (\n        typeof window !== 'undefined'\n          ? window.crypto || window.msCrypto\n          : void 0\n      )\n\n  if (lib !== void 0) {\n    if (lib.randomBytes !== void 0) {\n      return lib.randomBytes\n    }\n    if (lib.getRandomValues !== void 0) {\n      return n => {\n        const bytes = new Uint8Array(n)\n        lib.getRandomValues(bytes)\n        return bytes\n      }\n    }\n  }\n\n  return n => {\n    const r = []\n    for (let i = n; i > 0; i--) {\n      r.push(Math.floor(Math.random() * 256))\n    }\n    return r\n  }\n})()\n\n// Buffer random numbers for speed\n// Reduce memory usage by decreasing this number (min 16)\n// or improve speed by increasing this number (try 16384)\nconst BUFFER_SIZE = 4096\n\nexport default function () {\n  // Buffer some random bytes for speed\n  if (buf === void 0 || (bufIdx + 16 > BUFFER_SIZE)) {\n    bufIdx = 0\n    buf = randomBytes(BUFFER_SIZE)\n  }\n\n  const b = Array.prototype.slice.call(buf, bufIdx, (bufIdx += 16))\n  b[ 6 ] = (b[ 6 ] & 0x0f) | 0x40\n  b[ 8 ] = (b[ 8 ] & 0x3f) | 0x80\n\n  return hexBytes[ b[ 0 ] ] + hexBytes[ b[ 1 ] ]\n    + hexBytes[ b[ 2 ] ] + hexBytes[ b[ 3 ] ] + '-'\n    + hexBytes[ b[ 4 ] ] + hexBytes[ b[ 5 ] ] + '-'\n    + hexBytes[ b[ 6 ] ] + hexBytes[ b[ 7 ] ] + '-'\n    + hexBytes[ b[ 8 ] ] + hexBytes[ b[ 9 ] ] + '-'\n    + hexBytes[ b[ 10 ] ] + hexBytes[ b[ 11 ] ]\n    + hexBytes[ b[ 12 ] ] + hexBytes[ b[ 13 ] ]\n    + hexBytes[ b[ 14 ] ] + hexBytes[ b[ 15 ] ]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}