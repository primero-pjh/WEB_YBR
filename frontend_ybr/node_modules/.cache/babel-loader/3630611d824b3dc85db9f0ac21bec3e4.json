{"ast":null,"code":"import { computed } from 'vue';\nexport const useRatioProps = {\n  ratio: [String, Number]\n};\nexport default function (props, naturalRatio) {\n  // return ratioStyle\n  return computed(() => {\n    const ratio = Number(props.ratio || (naturalRatio !== void 0 ? naturalRatio.value : void 0));\n    return isNaN(ratio) !== true && ratio > 0 ? {\n      paddingBottom: `${100 / ratio}%`\n    } : null;\n  });\n}","map":{"version":3,"names":["computed","useRatioProps","ratio","String","Number","props","naturalRatio","value","isNaN","paddingBottom"],"sources":["C:/Users/82107/Desktop/WEB_YBR/frontend_ybr/node_modules/quasar/src/composables/private/use-ratio.js"],"sourcesContent":["import { computed } from 'vue'\r\n\r\nexport const useRatioProps = {\r\n  ratio: [ String, Number ]\r\n}\r\n\r\nexport default function (props, naturalRatio) {\r\n  // return ratioStyle\r\n  return computed(() => {\r\n    const ratio = Number(\r\n      props.ratio || (naturalRatio !== void 0 ? naturalRatio.value : void 0)\r\n    )\r\n\r\n    return isNaN(ratio) !== true && ratio > 0\r\n      ? { paddingBottom: `${ 100 / ratio }%` }\r\n      : null\r\n  })\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,KAAzB;AAEA,OAAO,MAAMC,aAAa,GAAG;EAC3BC,KAAK,EAAE,CAAEC,MAAF,EAAUC,MAAV;AADoB,CAAtB;AAIP,eAAe,UAAUC,KAAV,EAAiBC,YAAjB,EAA+B;EAC5C;EACA,OAAON,QAAQ,CAAC,MAAM;IACpB,MAAME,KAAK,GAAGE,MAAM,CAClBC,KAAK,CAACH,KAAN,KAAgBI,YAAY,KAAK,KAAK,CAAtB,GAA0BA,YAAY,CAACC,KAAvC,GAA+C,KAAK,CAApE,CADkB,CAApB;IAIA,OAAOC,KAAK,CAACN,KAAD,CAAL,KAAiB,IAAjB,IAAyBA,KAAK,GAAG,CAAjC,GACH;MAAEO,aAAa,EAAG,GAAG,MAAMP,KAAO;IAAlC,CADG,GAEH,IAFJ;EAGD,CARc,CAAf;AASD"},"metadata":{},"sourceType":"module"}