{"ast":null,"code":"import { h, computed, getCurrentInstance } from 'vue';\nimport useSize from '../../composables/private/use-size.js';\nimport { useCircularCommonProps } from './use-circular-progress.js';\nimport { createComponent } from '../../utils/private/create.js';\nimport { hMergeSlotSafely } from '../../utils/private/render.js';\nimport { between } from '../../utils/format.js';\nconst radius = 50,\n      diameter = 2 * radius,\n      circumference = diameter * Math.PI,\n      strokeDashArray = Math.round(circumference * 1000) / 1000;\nexport default createComponent({\n  name: 'QCircularProgress',\n  props: { ...useCircularCommonProps,\n    value: {\n      type: Number,\n      default: 0\n    },\n    animationSpeed: {\n      type: [String, Number],\n      default: 600\n    },\n    indeterminate: Boolean\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const {\n      proxy: {\n        $q\n      }\n    } = getCurrentInstance();\n    const sizeStyle = useSize(props);\n    const svgStyle = computed(() => {\n      const angle = ($q.lang.rtl === true ? -1 : 1) * props.angle;\n      return {\n        transform: props.reverse !== ($q.lang.rtl === true) ? `scale3d(-1, 1, 1) rotate3d(0, 0, 1, ${-90 - angle}deg)` : `rotate3d(0, 0, 1, ${angle - 90}deg)`\n      };\n    });\n    const circleStyle = computed(() => props.instantFeedback !== true && props.indeterminate !== true ? {\n      transition: `stroke-dashoffset ${props.animationSpeed}ms ease 0s, stroke ${props.animationSpeed}ms ease`\n    } : '');\n    const viewBox = computed(() => diameter / (1 - props.thickness / 2));\n    const viewBoxAttr = computed(() => `${viewBox.value / 2} ${viewBox.value / 2} ${viewBox.value} ${viewBox.value}`);\n    const normalized = computed(() => between(props.value, props.min, props.max));\n    const strokeDashOffset = computed(() => circumference * (1 - (normalized.value - props.min) / (props.max - props.min)));\n    const strokeWidth = computed(() => props.thickness / 2 * viewBox.value);\n\n    function getCircle({\n      thickness,\n      offset,\n      color,\n      cls\n    }) {\n      return h('circle', {\n        class: 'q-circular-progress__' + cls + (color !== void 0 ? ` text-${color}` : ''),\n        style: circleStyle.value,\n        fill: 'transparent',\n        stroke: 'currentColor',\n        'stroke-width': thickness,\n        'stroke-dasharray': strokeDashArray,\n        'stroke-dashoffset': offset,\n        cx: viewBox.value,\n        cy: viewBox.value,\n        r: radius\n      });\n    }\n\n    return () => {\n      const svgChild = [];\n      props.centerColor !== void 0 && props.centerColor !== 'transparent' && svgChild.push(h('circle', {\n        class: `q-circular-progress__center text-${props.centerColor}`,\n        fill: 'currentColor',\n        r: radius - strokeWidth.value / 2,\n        cx: viewBox.value,\n        cy: viewBox.value\n      }));\n      props.trackColor !== void 0 && props.trackColor !== 'transparent' && svgChild.push(getCircle({\n        cls: 'track',\n        thickness: strokeWidth.value,\n        offset: 0,\n        color: props.trackColor\n      }));\n      svgChild.push(getCircle({\n        cls: 'circle',\n        thickness: strokeWidth.value,\n        offset: strokeDashOffset.value,\n        color: props.color\n      }));\n      const child = [h('svg', {\n        class: 'q-circular-progress__svg',\n        style: svgStyle.value,\n        viewBox: viewBoxAttr.value,\n        'aria-hidden': 'true'\n      }, svgChild)];\n      props.showValue === true && child.push(h('div', {\n        class: 'q-circular-progress__text absolute-full row flex-center content-center',\n        style: {\n          fontSize: props.fontSize\n        }\n      }, slots.default !== void 0 ? slots.default() : [h('div', normalized.value)]));\n      return h('div', {\n        class: `q-circular-progress q-circular-progress--${props.indeterminate === true ? 'in' : ''}determinate`,\n        style: sizeStyle.value,\n        role: 'progressbar',\n        'aria-valuemin': props.min,\n        'aria-valuemax': props.max,\n        'aria-valuenow': props.indeterminate === true ? void 0 : normalized.value\n      }, hMergeSlotSafely(slots.internal, child)); // \"internal\" is used by QKnob\n    };\n  }\n\n});","map":{"version":3,"names":["h","computed","getCurrentInstance","useSize","useCircularCommonProps","createComponent","hMergeSlotSafely","between","radius","diameter","circumference","Math","PI","strokeDashArray","round","name","props","value","type","Number","default","animationSpeed","String","indeterminate","Boolean","setup","slots","proxy","$q","sizeStyle","svgStyle","angle","lang","rtl","transform","reverse","circleStyle","instantFeedback","transition","viewBox","thickness","viewBoxAttr","normalized","min","max","strokeDashOffset","strokeWidth","getCircle","offset","color","cls","class","style","fill","stroke","cx","cy","r","svgChild","centerColor","push","trackColor","child","showValue","fontSize","role","internal"],"sources":["C:/Users/park2020/Desktop/WEB_YBR/frontend_ybr/node_modules/quasar/src/components/circular-progress/QCircularProgress.js"],"sourcesContent":["import { h, computed, getCurrentInstance } from 'vue'\n\nimport useSize from '../../composables/private/use-size.js'\nimport { useCircularCommonProps } from './use-circular-progress.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hMergeSlotSafely } from '../../utils/private/render.js'\nimport { between } from '../../utils/format.js'\n\nconst\n  radius = 50,\n  diameter = 2 * radius,\n  circumference = diameter * Math.PI,\n  strokeDashArray = Math.round(circumference * 1000) / 1000\n\nexport default createComponent({\n  name: 'QCircularProgress',\n\n  props: {\n    ...useCircularCommonProps,\n\n    value: {\n      type: Number,\n      default: 0\n    },\n\n    animationSpeed: {\n      type: [ String, Number ],\n      default: 600\n    },\n\n    indeterminate: Boolean\n  },\n\n  setup (props, { slots }) {\n    const { proxy: { $q } } = getCurrentInstance()\n    const sizeStyle = useSize(props)\n\n    const svgStyle = computed(() => {\n      const angle = ($q.lang.rtl === true ? -1 : 1) * props.angle\n\n      return {\n        transform: props.reverse !== ($q.lang.rtl === true)\n          ? `scale3d(-1, 1, 1) rotate3d(0, 0, 1, ${ -90 - angle }deg)`\n          : `rotate3d(0, 0, 1, ${ angle - 90 }deg)`\n      }\n    })\n\n    const circleStyle = computed(() => (\n      props.instantFeedback !== true && props.indeterminate !== true\n        ? { transition: `stroke-dashoffset ${ props.animationSpeed }ms ease 0s, stroke ${ props.animationSpeed }ms ease` }\n        : ''\n    ))\n\n    const viewBox = computed(() => diameter / (1 - props.thickness / 2))\n\n    const viewBoxAttr = computed(() =>\n      `${ viewBox.value / 2 } ${ viewBox.value / 2 } ${ viewBox.value } ${ viewBox.value }`\n    )\n\n    const normalized = computed(() => between(props.value, props.min, props.max))\n\n    const strokeDashOffset = computed(() => circumference * (\n      1 - (normalized.value - props.min) / (props.max - props.min)\n    ))\n\n    const strokeWidth = computed(() => props.thickness / 2 * viewBox.value)\n\n    function getCircle ({ thickness, offset, color, cls }) {\n      return h('circle', {\n        class: 'q-circular-progress__' + cls + (color !== void 0 ? ` text-${ color }` : ''),\n        style: circleStyle.value,\n        fill: 'transparent',\n        stroke: 'currentColor',\n        'stroke-width': thickness,\n        'stroke-dasharray': strokeDashArray,\n        'stroke-dashoffset': offset,\n        cx: viewBox.value,\n        cy: viewBox.value,\n        r: radius\n      })\n    }\n\n    return () => {\n      const svgChild = []\n\n      props.centerColor !== void 0 && props.centerColor !== 'transparent' && svgChild.push(\n        h('circle', {\n          class: `q-circular-progress__center text-${ props.centerColor }`,\n          fill: 'currentColor',\n          r: radius - strokeWidth.value / 2,\n          cx: viewBox.value,\n          cy: viewBox.value\n        })\n      )\n\n      props.trackColor !== void 0 && props.trackColor !== 'transparent' && svgChild.push(\n        getCircle({\n          cls: 'track',\n          thickness: strokeWidth.value,\n          offset: 0,\n          color: props.trackColor\n        })\n      )\n\n      svgChild.push(\n        getCircle({\n          cls: 'circle',\n          thickness: strokeWidth.value,\n          offset: strokeDashOffset.value,\n          color: props.color\n        })\n      )\n\n      const child = [\n        h('svg', {\n          class: 'q-circular-progress__svg',\n          style: svgStyle.value,\n          viewBox: viewBoxAttr.value,\n          'aria-hidden': 'true'\n        }, svgChild)\n      ]\n\n      props.showValue === true && child.push(\n        h('div', {\n          class: 'q-circular-progress__text absolute-full row flex-center content-center',\n          style: { fontSize: props.fontSize }\n        }, slots.default !== void 0 ? slots.default() : [ h('div', normalized.value) ])\n      )\n\n      return h('div', {\n        class: `q-circular-progress q-circular-progress--${ props.indeterminate === true ? 'in' : '' }determinate`,\n        style: sizeStyle.value,\n        role: 'progressbar',\n        'aria-valuemin': props.min,\n        'aria-valuemax': props.max,\n        'aria-valuenow': props.indeterminate === true ? void 0 : normalized.value\n      }, hMergeSlotSafely(slots.internal, child)) // \"internal\" is used by QKnob\n    }\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}