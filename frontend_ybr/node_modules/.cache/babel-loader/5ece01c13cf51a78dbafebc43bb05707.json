{"ast":null,"code":"import { inject, watch, onBeforeUnmount, getCurrentInstance } from 'vue';\nimport { formKey } from '../utils/private/symbols.js';\nexport default function ({\n  validate,\n  resetValidation,\n  requiresQForm\n}) {\n  const $form = inject(formKey, false);\n\n  if ($form !== false) {\n    const {\n      props,\n      proxy\n    } = getCurrentInstance(); // export public method (so it can be used in QForm)\n\n    Object.assign(proxy, {\n      validate,\n      resetValidation\n    });\n    watch(() => props.disable, val => {\n      if (val === true) {\n        typeof resetValidation === 'function' && resetValidation();\n        $form.unbindComponent(proxy);\n      } else {\n        $form.bindComponent(proxy);\n      }\n    }); // register component to parent QForm\n\n    props.disable !== true && $form.bindComponent(proxy);\n    onBeforeUnmount(() => {\n      // unregister component\n      props.disable !== true && $form.unbindComponent(proxy);\n    });\n  } else if (requiresQForm === true) {\n    console.error('Parent QForm not found on useFormChild()!');\n  }\n}","map":{"version":3,"names":["inject","watch","onBeforeUnmount","getCurrentInstance","formKey","validate","resetValidation","requiresQForm","$form","props","proxy","Object","assign","disable","val","unbindComponent","bindComponent","console","error"],"sources":["C:/Users/park2020/Desktop/WEB_YBR/frontend_ybr/node_modules/quasar/src/composables/use-form-child.js"],"sourcesContent":["import { inject, watch, onBeforeUnmount, getCurrentInstance } from 'vue'\n\nimport { formKey } from '../utils/private/symbols.js'\n\nexport default function ({ validate, resetValidation, requiresQForm }) {\n  const $form = inject(formKey, false)\n\n  if ($form !== false) {\n    const { props, proxy } = getCurrentInstance()\n\n    // export public method (so it can be used in QForm)\n    Object.assign(proxy, { validate, resetValidation })\n\n    watch(() => props.disable, val => {\n      if (val === true) {\n        typeof resetValidation === 'function' && resetValidation()\n        $form.unbindComponent(proxy)\n      }\n      else {\n        $form.bindComponent(proxy)\n      }\n    })\n\n    // register component to parent QForm\n    props.disable !== true && $form.bindComponent(proxy)\n\n    onBeforeUnmount(() => {\n      // unregister component\n      props.disable !== true && $form.unbindComponent(proxy)\n    })\n  }\n  else if (requiresQForm === true) {\n    console.error('Parent QForm not found on useFormChild()!')\n  }\n}\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,eAAxB,EAAyCC,kBAAzC,QAAmE,KAAnE;AAEA,SAASC,OAAT,QAAwB,6BAAxB;AAEA,eAAe,UAAU;EAAEC,QAAF;EAAYC,eAAZ;EAA6BC;AAA7B,CAAV,EAAwD;EACrE,MAAMC,KAAK,GAAGR,MAAM,CAACI,OAAD,EAAU,KAAV,CAApB;;EAEA,IAAII,KAAK,KAAK,KAAd,EAAqB;IACnB,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAmBP,kBAAkB,EAA3C,CADmB,CAGnB;;IACAQ,MAAM,CAACC,MAAP,CAAcF,KAAd,EAAqB;MAAEL,QAAF;MAAYC;IAAZ,CAArB;IAEAL,KAAK,CAAC,MAAMQ,KAAK,CAACI,OAAb,EAAsBC,GAAG,IAAI;MAChC,IAAIA,GAAG,KAAK,IAAZ,EAAkB;QAChB,OAAOR,eAAP,KAA2B,UAA3B,IAAyCA,eAAe,EAAxD;QACAE,KAAK,CAACO,eAAN,CAAsBL,KAAtB;MACD,CAHD,MAIK;QACHF,KAAK,CAACQ,aAAN,CAAoBN,KAApB;MACD;IACF,CARI,CAAL,CANmB,CAgBnB;;IACAD,KAAK,CAACI,OAAN,KAAkB,IAAlB,IAA0BL,KAAK,CAACQ,aAAN,CAAoBN,KAApB,CAA1B;IAEAR,eAAe,CAAC,MAAM;MACpB;MACAO,KAAK,CAACI,OAAN,KAAkB,IAAlB,IAA0BL,KAAK,CAACO,eAAN,CAAsBL,KAAtB,CAA1B;IACD,CAHc,CAAf;EAID,CAvBD,MAwBK,IAAIH,aAAa,KAAK,IAAtB,EAA4B;IAC/BU,OAAO,CAACC,KAAR,CAAc,2CAAd;EACD;AACF"},"metadata":{},"sourceType":"module"}