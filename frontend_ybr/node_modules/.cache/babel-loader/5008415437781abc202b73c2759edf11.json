{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  if (!this.io.reconnecting) this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","map":{"version":3,"names":["parser","require","Emitter","toArray","on","bind","debug","parseqs","hasBin","module","exports","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","error","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","ping","pong","emit","prototype","io","nsp","opts","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","query","autoConnect","open","subEvents","subs","readyState","onopen","send","args","arguments","unshift","apply","ev","hasOwnProperty","packet","type","binary","undefined","BINARY_EVENT","EVENT","data","options","compress","length","pop","id","push","encode","CONNECT","onclose","reason","onpacket","sameNamespace","rootNamespaceError","ERROR","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ack","self","sent","emitBuffered","i","destroy","close"],"sources":["C:/Users/park2020/Desktop/WEB_YBR/frontend_ybr/node_modules/socket.io-client/lib/socket.js"],"sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  if (!this.io.reconnecting) this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}