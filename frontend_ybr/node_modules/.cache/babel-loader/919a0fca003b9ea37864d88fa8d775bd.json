{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","map":{"version":3,"names":["slice","module","exports","obj","fn","Error","args","call","arguments","apply","concat"],"sources":["C:/Users/park2020/Desktop/WEB_YBR/frontend_ybr/node_modules/component-bind/index.js"],"sourcesContent":["/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n"],"mappings":";;AAAA;AACA;AACA;AAEA,IAAIA,KAAK,GAAG,GAAGA,KAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,EAAd,EAAiB;EAChC,IAAI,YAAY,OAAOA,EAAvB,EAA2BA,EAAE,GAAGD,GAAG,CAACC,EAAD,CAAR;EAC3B,IAAI,cAAc,OAAOA,EAAzB,EAA6B,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;EAC7B,IAAIC,IAAI,GAAGN,KAAK,CAACO,IAAN,CAAWC,SAAX,EAAsB,CAAtB,CAAX;EACA,OAAO,YAAU;IACf,OAAOJ,EAAE,CAACK,KAAH,CAASN,GAAT,EAAcG,IAAI,CAACI,MAAL,CAAYV,KAAK,CAACO,IAAN,CAAWC,SAAX,CAAZ,CAAd,CAAP;EACD,CAFD;AAGD,CAPD"},"metadata":{},"sourceType":"script"}