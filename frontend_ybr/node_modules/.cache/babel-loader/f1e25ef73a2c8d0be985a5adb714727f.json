{"ast":null,"code":"// used directly by docs too\nexport function getParentVm(vm) {\n  if (Object(vm.$parent) === vm.$parent) {\n    return vm.$parent;\n  }\n\n  vm = vm.$.parent;\n\n  while (Object(vm) === vm) {\n    if (Object(vm.proxy) === vm.proxy) {\n      return vm.proxy;\n    }\n\n    vm = vm.parent;\n  }\n}\n\nfunction fillNormalizedVNodes(children, vnode) {\n  if (typeof vnode.type === 'symbol') {\n    if (Array.isArray(vnode.children) === true) {\n      vnode.children.forEach(child => {\n        fillNormalizedVNodes(children, child);\n      });\n    }\n  } else {\n    children.add(vnode);\n  }\n} // vnodes from rendered in advanced slots\n\n\nexport function getNormalizedVNodes(vnodes) {\n  const children = new Set();\n  vnodes.forEach(vnode => {\n    fillNormalizedVNodes(children, vnode);\n  });\n  return Array.from(children);\n}\nexport function vmHasRouter(vm) {\n  return vm.appContext.config.globalProperties.$router !== void 0;\n}","map":{"version":3,"names":["getParentVm","vm","Object","$parent","$","parent","proxy","fillNormalizedVNodes","children","vnode","type","Array","isArray","forEach","child","add","getNormalizedVNodes","vnodes","Set","from","vmHasRouter","appContext","config","globalProperties","$router"],"sources":["C:/Users/82107/Desktop/WEB_YBR/frontend_ybr/node_modules/quasar/src/utils/private/vm.js"],"sourcesContent":["// used directly by docs too\r\nexport function getParentVm (vm) {\r\n  if (Object(vm.$parent) === vm.$parent) {\r\n    return vm.$parent\r\n  }\r\n\r\n  vm = vm.$.parent\r\n\r\n  while (Object(vm) === vm) {\r\n    if (Object(vm.proxy) === vm.proxy) {\r\n      return vm.proxy\r\n    }\r\n\r\n    vm = vm.parent\r\n  }\r\n}\r\n\r\nfunction fillNormalizedVNodes (children, vnode) {\r\n  if (typeof vnode.type === 'symbol') {\r\n    if (Array.isArray(vnode.children) === true) {\r\n      vnode.children.forEach(child => {\r\n        fillNormalizedVNodes(children, child)\r\n      })\r\n    }\r\n  }\r\n  else {\r\n    children.add(vnode)\r\n  }\r\n}\r\n\r\n// vnodes from rendered in advanced slots\r\nexport function getNormalizedVNodes (vnodes) {\r\n  const children = new Set()\r\n\r\n  vnodes.forEach(vnode => {\r\n    fillNormalizedVNodes(children, vnode)\r\n  })\r\n\r\n  return Array.from(children)\r\n}\r\n\r\nexport function vmHasRouter (vm) {\r\n  return vm.appContext.config.globalProperties.$router !== void 0\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,SAASA,WAAT,CAAsBC,EAAtB,EAA0B;EAC/B,IAAIC,MAAM,CAACD,EAAE,CAACE,OAAJ,CAAN,KAAuBF,EAAE,CAACE,OAA9B,EAAuC;IACrC,OAAOF,EAAE,CAACE,OAAV;EACD;;EAEDF,EAAE,GAAGA,EAAE,CAACG,CAAH,CAAKC,MAAV;;EAEA,OAAOH,MAAM,CAACD,EAAD,CAAN,KAAeA,EAAtB,EAA0B;IACxB,IAAIC,MAAM,CAACD,EAAE,CAACK,KAAJ,CAAN,KAAqBL,EAAE,CAACK,KAA5B,EAAmC;MACjC,OAAOL,EAAE,CAACK,KAAV;IACD;;IAEDL,EAAE,GAAGA,EAAE,CAACI,MAAR;EACD;AACF;;AAED,SAASE,oBAAT,CAA+BC,QAA/B,EAAyCC,KAAzC,EAAgD;EAC9C,IAAI,OAAOA,KAAK,CAACC,IAAb,KAAsB,QAA1B,EAAoC;IAClC,IAAIC,KAAK,CAACC,OAAN,CAAcH,KAAK,CAACD,QAApB,MAAkC,IAAtC,EAA4C;MAC1CC,KAAK,CAACD,QAAN,CAAeK,OAAf,CAAuBC,KAAK,IAAI;QAC9BP,oBAAoB,CAACC,QAAD,EAAWM,KAAX,CAApB;MACD,CAFD;IAGD;EACF,CAND,MAOK;IACHN,QAAQ,CAACO,GAAT,CAAaN,KAAb;EACD;AACF,C,CAED;;;AACA,OAAO,SAASO,mBAAT,CAA8BC,MAA9B,EAAsC;EAC3C,MAAMT,QAAQ,GAAG,IAAIU,GAAJ,EAAjB;EAEAD,MAAM,CAACJ,OAAP,CAAeJ,KAAK,IAAI;IACtBF,oBAAoB,CAACC,QAAD,EAAWC,KAAX,CAApB;EACD,CAFD;EAIA,OAAOE,KAAK,CAACQ,IAAN,CAAWX,QAAX,CAAP;AACD;AAED,OAAO,SAASY,WAAT,CAAsBnB,EAAtB,EAA0B;EAC/B,OAAOA,EAAE,CAACoB,UAAH,CAAcC,MAAd,CAAqBC,gBAArB,CAAsCC,OAAtC,KAAkD,KAAK,CAA9D;AACD"},"metadata":{},"sourceType":"module"}