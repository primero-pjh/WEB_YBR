{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_router_view)]);\n}","map":{"version":3,"mappings":";;EAEOA,EAAE,EAAC;;;;;uBAARC,oBAEM,KAFN,cAEM,CADJC,aAAeC,sBAAf,CACI,CAFN","names":["id","_createElementBlock","_createVNode","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\park2020\\Desktop\\WEB_YBR\\frontend_ybr\\src\\App.vue"],"sourcesContent":["<template>\n  \n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\n\nimport io from 'socket.io-client';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n\n    }\n  },\n  computed: {\n    name() {\n      return this.$store.state.name;\n    }\n  },\n  components: {\n  },\n  methods: {\n    \n  },\n  mounted: function() {\n    this.$store.dispatch('getUserInfo');\n  },\n  created: function() {\n    \n    const socket = io('http://localhost:3020', {\n      withCredentials: false,\n      transports : ['websocket'],  \n    });\n    socket.on(\"connection\", function(data) {\n      console.log(\"socket_id:\", data);\n    });\n  },\n}\n</script>"]},"metadata":{},"sourceType":"module"}