{"ast":null,"code":"import defineReactivePlugin from '../utils/private/define-reactive-plugin.js';\nimport { isRuntimeSsrPreHydration } from './Platform.js';\nconst Plugin = defineReactivePlugin({\n  isActive: false,\n  mode: false\n}, {\n  __media: void 0,\n\n  set(val) {\n    if (__QUASAR_SSR_SERVER__) {\n      return;\n    }\n\n    Plugin.mode = val;\n\n    if (val === 'auto') {\n      if (Plugin.__media === void 0) {\n        Plugin.__media = window.matchMedia('(prefers-color-scheme: dark)');\n\n        Plugin.__updateMedia = () => {\n          Plugin.set('auto');\n        };\n\n        Plugin.__media.addListener(Plugin.__updateMedia);\n      }\n\n      val = Plugin.__media.matches;\n    } else if (Plugin.__media !== void 0) {\n      Plugin.__media.removeListener(Plugin.__updateMedia);\n\n      Plugin.__media = void 0;\n    }\n\n    Plugin.isActive = val === true;\n    document.body.classList.remove(`body--${val === true ? 'light' : 'dark'}`);\n    document.body.classList.add(`body--${val === true ? 'dark' : 'light'}`);\n  },\n\n  toggle() {\n    if (__QUASAR_SSR_SERVER__ !== true) {\n      Plugin.set(Plugin.isActive === false);\n    }\n  },\n\n  install({\n    $q,\n    onSSRHydrated,\n    ssrContext\n  }) {\n    const {\n      dark\n    } = $q.config;\n\n    if (__QUASAR_SSR_SERVER__) {\n      this.isActive = dark === true;\n      $q.dark = {\n        isActive: false,\n        mode: false,\n        set: val => {\n          ssrContext._meta.bodyClasses = ssrContext._meta.bodyClasses.replace(' body--light', '').replace(' body--dark', '') + ` body--${val === true ? 'dark' : 'light'}`;\n          $q.dark.isActive = val === true;\n          $q.dark.mode = val;\n        },\n        toggle: () => {\n          $q.dark.set($q.dark.isActive === false);\n        }\n      };\n      $q.dark.set(dark);\n      return;\n    }\n\n    $q.dark = this;\n\n    if (this.__installed === true && dark === void 0) {\n      return;\n    }\n\n    this.isActive = dark === true;\n    const initialVal = dark !== void 0 ? dark : false;\n\n    if (isRuntimeSsrPreHydration.value === true) {\n      const ssrSet = val => {\n        this.__fromSSR = val;\n      };\n\n      const originalSet = this.set;\n      this.set = ssrSet;\n      ssrSet(initialVal);\n      onSSRHydrated.push(() => {\n        this.set = originalSet;\n        this.set(this.__fromSSR);\n      });\n    } else {\n      this.set(initialVal);\n    }\n  }\n\n});\nexport default Plugin;","map":{"version":3,"names":["defineReactivePlugin","isRuntimeSsrPreHydration","Plugin","isActive","mode","__media","set","val","__QUASAR_SSR_SERVER__","window","matchMedia","__updateMedia","addListener","matches","removeListener","document","body","classList","remove","add","toggle","install","$q","onSSRHydrated","ssrContext","dark","config","_meta","bodyClasses","replace","__installed","initialVal","value","ssrSet","__fromSSR","originalSet","push"],"sources":["C:/Users/82107/Desktop/WEB_YBR/frontend_ybr/node_modules/quasar/src/plugins/Dark.js"],"sourcesContent":["import defineReactivePlugin from '../utils/private/define-reactive-plugin.js'\r\nimport { isRuntimeSsrPreHydration } from './Platform.js'\r\n\r\nconst Plugin = defineReactivePlugin({\r\n  isActive: false,\r\n  mode: false\r\n}, {\r\n  __media: void 0,\r\n\r\n  set (val) {\r\n    if (__QUASAR_SSR_SERVER__) { return }\r\n\r\n    Plugin.mode = val\r\n\r\n    if (val === 'auto') {\r\n      if (Plugin.__media === void 0) {\r\n        Plugin.__media = window.matchMedia('(prefers-color-scheme: dark)')\r\n        Plugin.__updateMedia = () => { Plugin.set('auto') }\r\n        Plugin.__media.addListener(Plugin.__updateMedia)\r\n      }\r\n\r\n      val = Plugin.__media.matches\r\n    }\r\n    else if (Plugin.__media !== void 0) {\r\n      Plugin.__media.removeListener(Plugin.__updateMedia)\r\n      Plugin.__media = void 0\r\n    }\r\n\r\n    Plugin.isActive = val === true\r\n\r\n    document.body.classList.remove(`body--${ val === true ? 'light' : 'dark' }`)\r\n    document.body.classList.add(`body--${ val === true ? 'dark' : 'light' }`)\r\n  },\r\n\r\n  toggle () {\r\n    if (__QUASAR_SSR_SERVER__ !== true) {\r\n      Plugin.set(Plugin.isActive === false)\r\n    }\r\n  },\r\n\r\n  install ({ $q, onSSRHydrated, ssrContext }) {\r\n    const { dark } = $q.config\r\n\r\n    if (__QUASAR_SSR_SERVER__) {\r\n      this.isActive = dark === true\r\n\r\n      $q.dark = {\r\n        isActive: false,\r\n        mode: false,\r\n        set: val => {\r\n          ssrContext._meta.bodyClasses = ssrContext._meta.bodyClasses\r\n            .replace(' body--light', '')\r\n            .replace(' body--dark', '') + ` body--${ val === true ? 'dark' : 'light' }`\r\n\r\n          $q.dark.isActive = val === true\r\n          $q.dark.mode = val\r\n        },\r\n        toggle: () => {\r\n          $q.dark.set($q.dark.isActive === false)\r\n        }\r\n      }\r\n\r\n      $q.dark.set(dark)\r\n      return\r\n    }\r\n\r\n    $q.dark = this\r\n\r\n    if (this.__installed === true && dark === void 0) {\r\n      return\r\n    }\r\n\r\n    this.isActive = dark === true\r\n\r\n    const initialVal = dark !== void 0 ? dark : false\r\n\r\n    if (isRuntimeSsrPreHydration.value === true) {\r\n      const ssrSet = val => {\r\n        this.__fromSSR = val\r\n      }\r\n\r\n      const originalSet = this.set\r\n\r\n      this.set = ssrSet\r\n      ssrSet(initialVal)\r\n\r\n      onSSRHydrated.push(() => {\r\n        this.set = originalSet\r\n        this.set(this.__fromSSR)\r\n      })\r\n    }\r\n    else {\r\n      this.set(initialVal)\r\n    }\r\n  }\r\n})\r\n\r\nexport default Plugin\r\n"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,4CAAjC;AACA,SAASC,wBAAT,QAAyC,eAAzC;AAEA,MAAMC,MAAM,GAAGF,oBAAoB,CAAC;EAClCG,QAAQ,EAAE,KADwB;EAElCC,IAAI,EAAE;AAF4B,CAAD,EAGhC;EACDC,OAAO,EAAE,KAAK,CADb;;EAGDC,GAAG,CAAEC,GAAF,EAAO;IACR,IAAIC,qBAAJ,EAA2B;MAAE;IAAQ;;IAErCN,MAAM,CAACE,IAAP,GAAcG,GAAd;;IAEA,IAAIA,GAAG,KAAK,MAAZ,EAAoB;MAClB,IAAIL,MAAM,CAACG,OAAP,KAAmB,KAAK,CAA5B,EAA+B;QAC7BH,MAAM,CAACG,OAAP,GAAiBI,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAjB;;QACAR,MAAM,CAACS,aAAP,GAAuB,MAAM;UAAET,MAAM,CAACI,GAAP,CAAW,MAAX;QAAoB,CAAnD;;QACAJ,MAAM,CAACG,OAAP,CAAeO,WAAf,CAA2BV,MAAM,CAACS,aAAlC;MACD;;MAEDJ,GAAG,GAAGL,MAAM,CAACG,OAAP,CAAeQ,OAArB;IACD,CARD,MASK,IAAIX,MAAM,CAACG,OAAP,KAAmB,KAAK,CAA5B,EAA+B;MAClCH,MAAM,CAACG,OAAP,CAAeS,cAAf,CAA8BZ,MAAM,CAACS,aAArC;;MACAT,MAAM,CAACG,OAAP,GAAiB,KAAK,CAAtB;IACD;;IAEDH,MAAM,CAACC,QAAP,GAAkBI,GAAG,KAAK,IAA1B;IAEAQ,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAAgC,SAASX,GAAG,KAAK,IAAR,GAAe,OAAf,GAAyB,MAAQ,EAA1E;IACAQ,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,GAAxB,CAA6B,SAASZ,GAAG,KAAK,IAAR,GAAe,MAAf,GAAwB,OAAS,EAAvE;EACD,CA1BA;;EA4BDa,MAAM,GAAI;IACR,IAAIZ,qBAAqB,KAAK,IAA9B,EAAoC;MAClCN,MAAM,CAACI,GAAP,CAAWJ,MAAM,CAACC,QAAP,KAAoB,KAA/B;IACD;EACF,CAhCA;;EAkCDkB,OAAO,CAAE;IAAEC,EAAF;IAAMC,aAAN;IAAqBC;EAArB,CAAF,EAAqC;IAC1C,MAAM;MAAEC;IAAF,IAAWH,EAAE,CAACI,MAApB;;IAEA,IAAIlB,qBAAJ,EAA2B;MACzB,KAAKL,QAAL,GAAgBsB,IAAI,KAAK,IAAzB;MAEAH,EAAE,CAACG,IAAH,GAAU;QACRtB,QAAQ,EAAE,KADF;QAERC,IAAI,EAAE,KAFE;QAGRE,GAAG,EAAEC,GAAG,IAAI;UACViB,UAAU,CAACG,KAAX,CAAiBC,WAAjB,GAA+BJ,UAAU,CAACG,KAAX,CAAiBC,WAAjB,CAC5BC,OAD4B,CACpB,cADoB,EACJ,EADI,EAE5BA,OAF4B,CAEpB,aAFoB,EAEL,EAFK,IAEE,UAAUtB,GAAG,KAAK,IAAR,GAAe,MAAf,GAAwB,OAAS,EAF5E;UAIAe,EAAE,CAACG,IAAH,CAAQtB,QAAR,GAAmBI,GAAG,KAAK,IAA3B;UACAe,EAAE,CAACG,IAAH,CAAQrB,IAAR,GAAeG,GAAf;QACD,CAVO;QAWRa,MAAM,EAAE,MAAM;UACZE,EAAE,CAACG,IAAH,CAAQnB,GAAR,CAAYgB,EAAE,CAACG,IAAH,CAAQtB,QAAR,KAAqB,KAAjC;QACD;MAbO,CAAV;MAgBAmB,EAAE,CAACG,IAAH,CAAQnB,GAAR,CAAYmB,IAAZ;MACA;IACD;;IAEDH,EAAE,CAACG,IAAH,GAAU,IAAV;;IAEA,IAAI,KAAKK,WAAL,KAAqB,IAArB,IAA6BL,IAAI,KAAK,KAAK,CAA/C,EAAkD;MAChD;IACD;;IAED,KAAKtB,QAAL,GAAgBsB,IAAI,KAAK,IAAzB;IAEA,MAAMM,UAAU,GAAGN,IAAI,KAAK,KAAK,CAAd,GAAkBA,IAAlB,GAAyB,KAA5C;;IAEA,IAAIxB,wBAAwB,CAAC+B,KAAzB,KAAmC,IAAvC,EAA6C;MAC3C,MAAMC,MAAM,GAAG1B,GAAG,IAAI;QACpB,KAAK2B,SAAL,GAAiB3B,GAAjB;MACD,CAFD;;MAIA,MAAM4B,WAAW,GAAG,KAAK7B,GAAzB;MAEA,KAAKA,GAAL,GAAW2B,MAAX;MACAA,MAAM,CAACF,UAAD,CAAN;MAEAR,aAAa,CAACa,IAAd,CAAmB,MAAM;QACvB,KAAK9B,GAAL,GAAW6B,WAAX;QACA,KAAK7B,GAAL,CAAS,KAAK4B,SAAd;MACD,CAHD;IAID,CAdD,MAeK;MACH,KAAK5B,GAAL,CAASyB,UAAT;IACD;EACF;;AAxFA,CAHgC,CAAnC;AA8FA,eAAe7B,MAAf"},"metadata":{},"sourceType":"module"}